// <auto-generated />
using System;
using HK_Product.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HK_project.Migrations
{
    [DbContext(typeof(HKContext))]
    [Migration("20230702144453_a")]
    partial class a
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HK_project.Models.Aifile", b =>
                {
                    b.Property<string>("AifileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AifilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AifileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AifileId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("AIFiles");

                    b.HasData(
                        new
                        {
                            AifileId = "D0001",
                            AifilePath = "Upload/001.json",
                            AifileType = "json",
                            ApplicationId = "A0001"
                        },
                        new
                        {
                            AifileId = "D0002",
                            AifilePath = "Upload/002.json",
                            AifileType = "json",
                            ApplicationId = "A0001"
                        });
                });

            modelBuilder.Entity("HK_project.Models.Application", b =>
                {
                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("MemberId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            ApplicationId = "A0001",
                            MemberId = "C0001"
                        });
                });

            modelBuilder.Entity("HK_project.Models.Chat", b =>
                {
                    b.Property<string>("ChatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChatTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            ChatId = "C0001",
                            ChatName = "Gay",
                            ChatTime = new DateTime(2023, 7, 2, 22, 44, 53, 525, DateTimeKind.Local).AddTicks(1111),
                            UserId = "U0001"
                        });
                });

            modelBuilder.Entity("HK_project.Models.Embedding", b =>
                {
                    b.Property<string>("EmbeddingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AifileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmbeddingAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmbeddingQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmbeddingVectors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmbeddingId");

                    b.HasIndex("AifileId");

                    b.ToTable("Embedding");

                    b.HasData(
                        new
                        {
                            EmbeddingId = "E0001",
                            AifileId = "D0001",
                            EmbeddingVectors = "123,345,789",
                            Qa = "abc"
                        },
                        new
                        {
                            EmbeddingId = "E0002",
                            AifileId = "D0001",
                            EmbeddingVectors = "123,345,789",
                            Qa = "abc"
                        },
                        new
                        {
                            EmbeddingId = "E0003",
                            AifileId = "D0002",
                            EmbeddingVectors = "123,345,789",
                            Qa = "abc"
                        },
                        new
                        {
                            EmbeddingId = "E0004",
                            AifileId = "D0002",
                            EmbeddingVectors = "123,345,789",
                            Qa = "abc"
                        });
                });

            modelBuilder.Entity("HK_project.Models.Member", b =>
                {
                    b.Property<string>("MemberId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberId = "C0001",
                            MemberEmail = "aa@gmail.com",
                            MemberName = "aa",
                            MemberPassword = "aaaaaa"
                        });
                });

            modelBuilder.Entity("HK_project.Models.Qahistory", b =>
                {
                    b.Property<string>("QahistoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("QahistoryA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QahistoryQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QahistoryVectors")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QahistoryId");

                    b.HasIndex("ChatId");

                    b.ToTable("QAHistory");

                    b.HasData(
                        new
                        {
                            QahistoryId = "Q0001",
                            ChatId = "C0001",
                            QahistoryA = "abc",
                            QahistoryQ = "abc",
                            QahistoryVectors = "123,456,778"
                        },
                        new
                        {
                            QahistoryId = "Q0002",
                            ChatId = "C0001",
                            QahistoryA = "abc",
                            QahistoryQ = "abc",
                            QahistoryVectors = "123,456,789"
                        });
                });

            modelBuilder.Entity("HK_project.Models.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplicationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = "U0001",
                            ApplicationId = "A0001",
                            UserEmail = "aaa@gmail.com",
                            UserName = "aaa",
                            UserPassword = "aaaaaa"
                        });
                });

            modelBuilder.Entity("HK_project.Models.Aifile", b =>
                {
                    b.HasOne("HK_project.Models.Application", "Application")
                        .WithMany("Aifile")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Application");
                });

            modelBuilder.Entity("HK_project.Models.Application", b =>
                {
                    b.HasOne("HK_project.Models.Member", "Member")
                        .WithMany("Application")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Member");
                });

            modelBuilder.Entity("HK_project.Models.Chat", b =>
                {
                    b.HasOne("HK_project.Models.User", "User")
                        .WithMany("Chat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("User");
                });

            modelBuilder.Entity("HK_project.Models.Embedding", b =>
                {
                    b.HasOne("HK_project.Models.Aifile", "Aifile")
                        .WithMany("Embeddings")
                        .HasForeignKey("AifileId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Aifile");
                });

            modelBuilder.Entity("HK_project.Models.Qahistory", b =>
                {
                    b.HasOne("HK_project.Models.Chat", "Chat")
                        .WithMany("Qahistorie")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("HK_project.Models.User", b =>
                {
                    b.HasOne("HK_project.Models.Application", "Application")
                        .WithMany("User")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Application");
                });

            modelBuilder.Entity("HK_project.Models.Aifile", b =>
                {
                    b.Navigation("Embeddings");
                });

            modelBuilder.Entity("HK_project.Models.Application", b =>
                {
                    b.Navigation("Aifile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HK_project.Models.Chat", b =>
                {
                    b.Navigation("Qahistorie");
                });

            modelBuilder.Entity("HK_project.Models.Member", b =>
                {
                    b.Navigation("Application");
                });

            modelBuilder.Entity("HK_project.Models.User", b =>
                {
                    b.Navigation("Chat");
                });
#pragma warning restore 612, 618
        }
    }
}
