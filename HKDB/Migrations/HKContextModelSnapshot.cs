// <auto-generated />
using System;
using HKDB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HKDB.Migrations
{
    [DbContext(typeof(HKContext))]
    partial class HKContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HKDB.Models.Aifile", b =>
                {
                    b.Property<int>("AifileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AifileId"));

                    b.Property<string>("AifilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AifileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AifileId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("AiFiles");

                    b.HasData(
                        new
                        {
                            AifileId = 1,
                            AifilePath = "Upload/001.json",
                            AifileType = "json",
                            ApplicationId = 1
                        });
                });

            modelBuilder.Entity("HKDB.Models.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<string>("ApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MemberId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parameter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("MemberId");

                    b.ToTable("Applications");

                    b.HasData(
                        new
                        {
                            ApplicationId = 1,
                            ApplicationName = "aaa",
                            MemberId = 1
                        });
                });

            modelBuilder.Entity("HKDB.Models.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChatId"));

                    b.Property<string>("ChatName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChatTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            ChatId = 1,
                            ChatTime = new DateTime(2023, 7, 5, 18, 21, 45, 356, DateTimeKind.Local).AddTicks(9328),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("HKDB.Models.Embedding", b =>
                {
                    b.Property<int>("EmbeddingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmbeddingId"));

                    b.Property<int>("AifileId")
                        .HasColumnType("int");

                    b.Property<string>("EmbeddingAnswer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmbeddingQuestion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmbeddingVector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmbeddingId");

                    b.HasIndex("AifileId");

                    b.ToTable("Embeddings");

                    b.HasData(
                        new
                        {
                            EmbeddingId = 1,
                            AifileId = 1,
                            EmbeddingVector = "123,345,789",
                            Qa = "abc"
                        },
                        new
                        {
                            EmbeddingId = 2,
                            AifileId = 1,
                            EmbeddingVector = "123,345,789",
                            Qa = "abc"
                        });
                });

            modelBuilder.Entity("HKDB.Models.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"));

                    b.Property<string>("MemberEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");

                    b.HasData(
                        new
                        {
                            MemberId = 1,
                            MemberEmail = "admin@gmail.com",
                            MemberPassword = "670b14728ad9902aecba32e22fa4f6bd"
                        });
                });

            modelBuilder.Entity("HKDB.Models.Qahistory", b =>
                {
                    b.Property<int>("QahistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QahistoryId"));

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<string>("QahistoryA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QahistoryQ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QahistoryVector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QahistoryId");

                    b.HasIndex("ChatId");

                    b.ToTable("QAHistorys");

                    b.HasData(
                        new
                        {
                            QahistoryId = 1,
                            ChatId = 1,
                            QahistoryA = "A",
                            QahistoryQ = "Q",
                            QahistoryVector = "123,456,778"
                        });
                });

            modelBuilder.Entity("HKDB.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserEmail = "admin@gmail.com",
                            UserPassword = "670b14728ad9902aecba32e22fa4f6bd"
                        });
                });

            modelBuilder.Entity("HKDB.Models.Aifile", b =>
                {
                    b.HasOne("HKDB.Models.Application", "Application")
                        .WithMany("Aifile")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("HKDB.Models.Application", b =>
                {
                    b.HasOne("HKDB.Models.Member", "Member")
                        .WithMany("Application")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("HKDB.Models.Chat", b =>
                {
                    b.HasOne("HKDB.Models.User", "User")
                        .WithMany("Chat")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("HKDB.Models.Embedding", b =>
                {
                    b.HasOne("HKDB.Models.Aifile", "Aifile")
                        .WithMany("Embeddings")
                        .HasForeignKey("AifileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aifile");
                });

            modelBuilder.Entity("HKDB.Models.Qahistory", b =>
                {
                    b.HasOne("HKDB.Models.Chat", "Chat")
                        .WithMany("Qahistorie")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");
                });

            modelBuilder.Entity("HKDB.Models.Aifile", b =>
                {
                    b.Navigation("Embeddings");
                });

            modelBuilder.Entity("HKDB.Models.Application", b =>
                {
                    b.Navigation("Aifile");
                });

            modelBuilder.Entity("HKDB.Models.Chat", b =>
                {
                    b.Navigation("Qahistorie");
                });

            modelBuilder.Entity("HKDB.Models.Member", b =>
                {
                    b.Navigation("Application");
                });

            modelBuilder.Entity("HKDB.Models.User", b =>
                {
                    b.Navigation("Chat");
                });
#pragma warning restore 612, 618
        }
    }
}
